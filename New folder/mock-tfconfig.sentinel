import "strings"
import "types"

_modules = {
	"root": {
		"data":    {},
		"modules": {},
		"outputs": {},
		"providers": {
			"google": {
				"alias": {
					"": {
						"config": {
							"region": "us-west2",
						},
						"references": {
							"access_token": [
								"var.access_token",
							],
							"project": [
								"var.project_id",
							],
							"region": [],
						},
						"version": "~> 3.87.0",
					},
				},
				"config": {
					"region": "us-west2",
				},
				"references": {
					"access_token": [
						"var.access_token",
					],
					"project": [
						"var.project_id",
					],
					"region": [],
				},
				"version": "~> 3.87.0",
			},
		},
		"resources": {
			"google_kms_crypto_key": {
				"example-key": {
					"config": {
						"import_only": true,
						"labels": {
							"application_division": "paa",
							"application_name":     "demo",
							"application_role":     "app",
							"au":                   "0223092",
							"created":              "20211124",
							"data_compliance":      "pci",
							"data_confidentiality": "pub",
							"data_type":            "test",
							"env":                  "dev",
							"environment":          "dev",
							"gcp_region":           "us",
							"owner":                "hybridenv",
						},
						"rotation_period":               "7776000s",
						"skip_initial_version_creation": true,
					},
					"provisioners": null,
					"references": {
						"import_only": [],
						"key_ring": [
							"google_kms_key_ring.keyring.id",
							"google_kms_key_ring.keyring",
						],
						"labels": [],
						"name": [
							"var.keyring_key_name",
						],
						"rotation_period":               [],
						"skip_initial_version_creation": [],
					},
				},
			},
			"google_kms_key_ring": {
				"keyring": {
					"config":       {},
					"provisioners": null,
					"references": {
						"location": [
							"var.keyring_location",
						],
						"name": [
							"var.keyring_name",
						],
						"project": [
							"var.project",
						],
					},
				},
			},
			"google_kms_key_ring_import_job": {
				"import-job": {
					"config": {
						"import_method":    "RSA_OAEP_3072_SHA1_AES_256",
						"protection_level": "SOFTWARE",
					},
					"provisioners": null,
					"references": {
						"import_job_id": [
							"var.keyring_import_job",
						],
						"import_method": [],
						"key_ring": [
							"google_kms_key_ring.keyring.id",
							"google_kms_key_ring.keyring",
						],
						"protection_level": [],
					},
				},
			},
			"null_resource": {
				"import": {
					"config": {},
					"provisioners": [
						{
							"config": {},
							"references": {
								"command": [
									"var.keyring_import_job",
									"var.keyring_location",
									"var.keyring_name",
									"var.keyring_key_name",
									"var.key_path",
								],
							},
							"type": "local-exec",
						},
					],
					"references": {},
				},
				"proto_descriptor": {
					"config": {},
					"provisioners": [
						{
							"config": {},
							"references": {
								"command": [
									"var.key_path",
								],
							},
							"type": "local-exec",
						},
					],
					"references": {},
				},
			},
		},
		"variables": {
			"access_token": {
				"default":     null,
				"description": "",
			},
			"key_path": {
				"default":     "/tmp",
				"description": "",
			},
			"keyring_import_job": {
				"default":     "my-import-job",
				"description": "",
			},
			"keyring_key_name": {
				"default":     "us-dev-appid-encr-test1-cryptokey",
				"description": "",
			},
			"keyring_location": {
				"default":     "us",
				"description": "",
			},
			"keyring_name": {
				"default":     "us-dev-appid-encr-test1-keyring",
				"description": "",
			},
			"project": {
				"default":     "airline1-sabre-wolverine",
				"description": "",
			},
			"project_id": {
				"default":     null,
				"description": "",
			},
		},
	},
}

module_paths = [
	[],
]

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
modules = _modules.root.modules
providers = _modules.root.providers
resources = _modules.root.resources
variables = _modules.root.variables
outputs = _modules.root.outputs
